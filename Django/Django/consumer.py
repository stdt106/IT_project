import pika
import json
import os
import django
from datetime import datetime


os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'Django.settings')
django.setup()

from news.models import Articles


def save_article(data):
    try:
        title = data.get('title')
        anons = data.get('anons')
        full_text = data.get('full_text')
        date_str = data.get('date')

        if not (title and anons and full_text):
            print("‚ö†Ô∏è –ü—Ä–æ–ø—É—â–µ–Ω—ã –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è! –ü—Ä–æ–ø—É—Å–∫–∞–µ–º.")
            return

        date = datetime.fromisoformat(date_str) if date_str else datetime.now()

        article = Articles(
            title=title,
            anons=anons,
            full_text=full_text,
            date=date
        )
        article.save()
        print(f"‚úÖ –ù–æ–≤–æ—Å—Ç—å –¥–æ–±–∞–≤–ª–µ–Ω–∞: \n{title}\n{anons}\n{full_text}\n{date}")
    except Exception as e:
        print("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –Ω–æ–≤–æ—Å—Ç–∏:", e)


def callback(ch, method, properties, body):
    print("üì• –ü–æ–ª—É—á–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ")
    try:
        data = json.loads(body)
        save_article(data)
    except json.JSONDecodeError:
        print("‚ùå –ù–µ–≤–æ–∑–º–æ–∂–Ω–æ –¥–µ–∫–æ–¥–∏—Ä–æ–≤–∞—Ç—å JSON:", body)
    except Exception as e:
        print("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è:", e)
    finally:
        ch.basic_ack(delivery_tag=method.delivery_tag)


def main():

    credentials = pika.PlainCredentials('guest', 'guest')
    parameters = pika.ConnectionParameters(
        host='localhost',
        port=5672,
        credentials=credentials
    )

    try:
        connection = pika.BlockingConnection(parameters)
        channel = connection.channel()
        channel.queue_declare(queue='news_queue', durable=True)

        channel.basic_qos(prefetch_count=1)
        channel.basic_consume(queue='news_queue', on_message_callback=callback)

        print("üéß –û–∂–∏–¥–∞–Ω–∏–µ –Ω–æ–≤–æ—Å—Ç–µ–π –∏–∑ RabbitMQ...")
        channel.start_consuming()
    except pika.exceptions.AMQPConnectionError as e:
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ RabbitMQ:", e)
    except KeyboardInterrupt:
        print("‚õî –û—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
    except Exception as e:
        print("‚ùå –û–±—â–∞—è –æ—à–∏–±–∫–∞:", e)


if __name__ == '__main__':
    main()
